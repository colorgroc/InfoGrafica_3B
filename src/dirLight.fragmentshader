#version 330 core

in vec3 FragPos;
in vec3 Normal;
uniform vec3 lightdir;
uniform vec3 lightPos; 
uniform vec3 viewPos;
uniform vec3 lightColor;
uniform vec3 objectColor;

out vec4 color;

void main(){
	float ambientStrength = 0.1f;
    vec3 ambient = ambientStrength * lightColor;
	
	float difStreng = 0.5f;
	vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(-lightdir);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = difStreng * diff * lightColor;
	
	float specStrng = 0.5f;
	vec3 viewDir = normalize(viewPos - FragPos);
	vec3 reflectDir = reflect(-lightDir, norm);
	float spec = pow(max(dot(viewDir, reflectDir),0.0), 32);
	vec3 especular = spec * lightColor;
		
	color = vec4((ambient + especular + diffuse) * objectColor, 1.0);
}
